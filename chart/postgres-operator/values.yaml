## Documentation for configuring a Postgres Cluster can be found at https://access.crunchydata.com/documentation/postgres-operator/4.2.1/configuration/
## The (yaml) configuration files can be found in the deploy folder

nameOverride: ""
fullnameOverride: ""

# Image used for the job that will apply the operator yaml files for the relevant command (see below)
image:
  repository: gcr.io/neural-cortex-272213/pgo
  tag: 1.0.4
  pullPolicy: IfNotPresent

podName: postgres-operator
pgoPodName: pgo-client

# Command to run. Applies yaml from the operator folder:
## deploy-cluster:  applies backup-s3.yaml, rbac.yaml, operator.yaml, secrets.yaml, ss-secrets.yaml, cr.yaml
## backup-cluster:  applies backup.yaml
## restore-cluster: applies restore.yaml
## delete-cluster:  deletes cr.yaml
## list-backups:    applies 'kubectl get pxc' and 'kubectl get pxc-backups'
## delete-backup:   provide name of backup to delete. Applies 'kubectl delete pxc-backup <backup-name>'
## update-cluster:  provide the Percona Operator and API versions and cluster name to update. Patches cluster pods to defined version.
# Ensure the yaml in the operator folder contains what you want to apply before triggering the CD Pipeline
# See https://www.percona.com/doc/kubernetes-operator-for-pxc/operator.html for options
command: deploy-cluster

# If deleting a backup, provide the name
backupName: <backup-name>
backupType: FULL

# If updating a cluster, provide the Percona operator version, Percona API version and cluster name
# Note, the images for the updated version must be available to be pulled from the mysql-operator namespace
perconaOperatorVersion: 1.3.0
perconaApiVersion: v1-3-0
clusterName: cluster1
pgoadminUsername: pgoadmin
pgoadminPassword: pgoadmin
pgoadminRole: pgoadmin
pgoadminPerms: "*"
pgoInstallationName: dev
pgoImagePrefix: crunchydata
pgoBaseos: centos7
pgoVersion: 4.2.1
pgoApiserverPort: 8443
disableTls: false
tlsNoVerify: false
tlsCaTrust: 
addOsTruststore: false
noauthRoutes: 
excludeOsTrust: false 
disableEventing: false
